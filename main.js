(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._like=e.likes,this._cardId=e._id,this._userId=r,this._ownerId=e.owner,this._templateSelector=n,this._handleCardClick=o,this._handlePutLike=i,this._handleDeleteLike=a,this._handleClickDelete=u}var n,r;return n=t,(r=[{key:"_handleCardLike",value:function(){this.likeBtn.classList.contains("cards__heart_active")?this._handleDeleteLike(this,this._cardId):this._handlePutLike(this,this._cardId)}},{key:"setLike",value:function(e){this._likeButton.textContent=e.length,this.likeBtn.classList.toggle("cards__heart_active")}},{key:"handleCardDelete",value:function(){this._element.remove(),this._element=null}},{key:"_createCard",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".cards__card").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this.likeBtn=this._element.querySelector(".cards__heart"),this.likeBtn.addEventListener("click",(function(){e._handleCardLike()})),this._element.querySelector(".cards__delete").addEventListener("click",(function(){e._handleClickDelete(e)})),this._element.querySelector(".cards__image-button").addEventListener("click",(function(){e._handleCardClick({name:e._name,link:e._link})}))}},{key:"addCard",value:function(){var e=this;return this._element=this._createCard(),this._likeButton=this._element.querySelector(".cards__likes"),this._cardImage=this._element.querySelector(".cards__image"),this.cardText=this._element.querySelector(".cards__text"),this.cardText.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._likeButton.textContent=this._like.length,this._setEventListeners(),this._ownerId._id!=this._userId&&this._element.querySelector(".cards__delete").remove(),this._like.some((function(t){return t._id===e._userId}))&&this.likeBtn.classList.add("cards__heart_active"),this._element}},{key:"getCardId",value:function(){return this._cardId}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._validationConfig=t,this._formElement=n,this._inputs=Array.from(this._formElement.querySelectorAll(this._validationConfig.inputSelector)),this._forms=Array.from(document.querySelectorAll(this._validationConfig.formSelector)),this._button=n.querySelector(this._validationConfig.submitButtonSelector)}var t,r;return t=e,(r=[{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._validationConfig.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._validationConfig.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._validationConfig.inputErrorClass),t.classList.remove(this._validationConfig.errorClass),t.textContent=""}},{key:"_setButtonDisabled",value:function(){this._button.classList.add(this._validationConfig.inactiveButtonClass),this._button.setAttribute("disabled",!0)}},{key:"_setButtonActive",value:function(){this._button.classList.remove(this._validationConfig.inactiveButtonClass),this._button.removeAttribute("disabled",!1)}},{key:"_toggleButtonState",value:function(){this._inputs.some((function(e){return!e.validity.valid}))?this._setButtonDisabled():this._setButtonActive()}},{key:"_handleSetValidate",value:function(){var e=this;this._inputs.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleButtonState()}))}))}},{key:"resetValidation",value:function(){var e=this;this._inputs.forEach((function(t){e._hideInputError(t),e._setButtonDisabled()}))}},{key:"enableValidation",value:function(){this._handleSetValidate()}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,n)}function a(e,t){return function(e,t){return t.get?t.get.call(e):t.value}(e,c(e,t,"get"))}function u(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,c(e,t,"set"),n),n}function c(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}var l=new WeakMap,s=new WeakMap,f=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,l,{writable:!0,value:void 0}),i(this,s,{writable:!0,value:void 0}),u(this,l,r),u(this,s,document.querySelector(n))}var t,n;return t=e,(n=[{key:"addItem",value:function(e){a(this,s).prepend(e)}},{key:"renderer",value:function(e,t){var n=this;e.reverse().forEach((function(e){a(n,l).call(n,e,t)}))}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleKeyEscape")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleKeyEscape)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleKeyEscape)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_opened")&&e.close(),t.target.classList.contains("popup__close")&&e.close()}))}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=v(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},_.apply(this,arguments)}function v(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}function b(e,t){return b=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},b(e,t)}function m(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&b(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return m(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._imageElement=t._popup.querySelector(".popup-image__photo"),t._imageTitle=t._popup.querySelector(".popup-image__text"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.title,n=e.link;_(g(a.prototype),"open",this).call(this),this._imageElement.src=n,this._imageElement.alt=t,this._imageTitle.textContent=t}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(h);function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},S.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}function j(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleFormSubmit=t,n._form=n._popup.querySelector(".popup__form"),n._inputs=n._form.querySelectorAll(".popup__input"),n._button=n._form.querySelector(".popup__button"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputsValues={},this._inputs.forEach((function(t){e._inputsValues[t.name]=t.value})),this._inputsValues}},{key:"setEventListeners",value:function(){var e=this;S(P(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.loading(!0),e._handleFormSubmit(e._getInputValues())}))}},{key:"setInputValues",value:function(e){this._inputs.forEach((function(t){t.value=e[t.name]}))}},{key:"close",value:function(){S(P(a.prototype),"close",this).call(this),this._form.reset()}},{key:"loading",value:function(e){this._button.textContent=e?"Сохранение...":"Сохранить"}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(h);function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t){var n=t.nameSelector,r=t.bioSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._bio=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._userInfo={name:this._name.textContent,bio:this._bio.textContent},this._userInfo}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._bio.textContent=e.bio}},{key:"setAllInfo",value:function(e){this._name.textContent=e.name,this._bio.textContent=e.about,this._avatar.src=e.avatar,this._id=e._id}},{key:"setAvatar",value:function(e){this._avatar.src=e.avatar}},{key:"getUserId",value:function(){return this._id}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=B(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},D.apply(this,arguments)}function B(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}function x(e,t){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},x(e,t)}function A(e,t){if(t&&("object"===q(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function V(e){return V=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},V(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&x(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=V(r);if(o){var n=V(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return A(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleSureCardDelete=t,n._button=n._popup.querySelector(".popup__button"),n}return t=a,(n=[{key:"open",value:function(e){this._card=e,D(V(a.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;this._button.addEventListener("click",(function(){e._handleSureCardDelete(e._card)})),D(V(a.prototype),"setEventListeners",this).call(this)}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(h);function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var M=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.baseUrl,this._header=t.headers}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getProfileInfo",value:function(){var e=this;return fetch("".concat(this._url,"/users/me"),{headers:this._header}).then((function(t){return e._getResponseData(t)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._url,"/cards"),{headers:this._header}).then((function(t){return e._getResponseData(t)}))}},{key:"editProfileInfo",value:function(e){var t=this;return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._header,body:JSON.stringify({name:e.name,about:e.bio})}).then((function(e){return t._getResponseData(e)}))}},{key:"addNewCard",value:function(e){var t=this;return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._header,body:JSON.stringify({name:e.title,link:e.link})}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._header}).then((function(e){return t._getResponseData(e)}))}},{key:"putLike",value:function(e){var t=this;return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._header}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._header}).then((function(e){return t._getResponseData(e)}))}},{key:"editUserAvatar",value:function(e){var t=this;return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._header,body:JSON.stringify({avatar:e})}).then((function(e){return t._getResponseData(e)}))}}])&&N(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-52",headers:{authorization:"8cd6391f-276f-4623-87db-26168ea0dc10","Content-Type":"application/json"}}),J=document.querySelector(".profile__edit-button"),K=document.querySelector(".profile-popup__form"),z=document.querySelector(".profile__add-button"),F=document.querySelector(".popup-add__form"),H=document.querySelector(".profile__image"),W=document.querySelector(".popup-avatar__form"),$={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function G(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Q=new r($,K);Q.enableValidation();var X=new r($,F);X.enableValidation();var Y=new r($,W);Y.enableValidation();var Z=new R({nameSelector:".profile__title",bioSelector:".profile__text",avatarSelector:".profile__image"}),ee=new f({renderer:function(e){ee.addItem(ue(e))}},".cards__table");Promise.all([M.getProfileInfo(),M.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return G(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?G(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];Z.setAllInfo(o),ee.renderer(i)})).catch((function(e){console.log("Error load cards",e)}));var te=new U(".popup-delete",(function(e){M.deleteCard(e.getCardId()).then((function(){e.handleCardDelete(),te.close()})).catch((function(e){console.log("Error delete card",e)}))})),ne=function(e){te.open(e)};te.setEventListeners(),J.addEventListener("click",(function(){re.open(),Q.resetValidation();var e=Z.getUserInfo();re.setInputValues(e)}));var re=new L(".profile-popup",(function(e){M.editProfileInfo(e).then((function(t){Z.setUserInfo(e),re.close()})).catch((function(e){console.log("Error updating profile",e)})).finally((function(){return re.loading(!1)}))}));re.setEventListeners(),H.addEventListener("click",(function(){oe.open(),Y.resetValidation()}));var oe=new L(".popup-avatar",(function(e){M.editUserAvatar(e["avatar-link"]).then((function(e){Z.setAvatar(e),oe.close()})).catch((function(e){console.log("Error updating avatar",e)})).finally((function(){return oe.loading(!1)}))}));oe.setEventListeners(),z.addEventListener("click",(function(){ce.open(),X.resetValidation()}));var ie=function(e,t){M.putLike(t).then((function(t){e.setLike(t.likes)})).catch((function(e){console.log("Error like",e)}))},ae=function(e,t){M.deleteLike(t).then((function(t){e.setLike(t.likes)})).catch((function(e){console.log("Error remove like",e)}))};function ue(e){return new t(e,".template",Z.getUserId(),se,ie,ae,ne).addCard()}var ce=new L(".popup-add",(function(e){M.addNewCard(e).then((function(e){ee.addItem(ue(e)),ce.close()})).catch((function(e){console.log("Error add card",e)})).finally((function(){return ce.loading(!1)}))}));ce.setEventListeners();var le=new k(".popup-image"),se=function(e){var t=e.name,n=e.link;le.open({name:t,link:n})};le.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,